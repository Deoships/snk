name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(cat package.json | jq -r .version)
          echo "::set-output name=version::$VERSION"
      - name: Use Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build:action
      - name: Test
        run: npm test
      - name: Change colors in palettes.ts
        run: |
          sed -i "s/#COLOR1/#70a5fd/g" packages/action/palettes.ts
          sed -i "s/#COLOR2/#70a5fd/g" packages/action/palettes.ts
          sed -i "s/#COLOR3/#70a5fd/g" packages/action/palettes.ts
          cache: false
      - name: Publish to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            platane/snk:latest
            platane/snk:${{ steps.extract_version.outputs.version }}
          build-args: |
            VERSION=${{ steps.extract_version.outputs.version }}
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Release v${{ steps.extract_version.outputs.version }}
          body: |
            Release of version ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
